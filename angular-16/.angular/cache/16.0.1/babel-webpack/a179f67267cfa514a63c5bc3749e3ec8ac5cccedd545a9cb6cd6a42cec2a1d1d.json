{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/predict-land/predict-land.component.ts\nimport { Component } from '@angular/core';\nlet PredictLandComponent = class PredictLandComponent {\n  constructor(predictionService, currencyService) {\n    this.predictionService = predictionService;\n    this.currencyService = currencyService;\n    this.predictedUSD = null;\n    this.predictedTND = null;\n    this.predicting = false;\n    this.inputDim = 25;\n  }\n  onSubmit(form) {\n    if (form.invalid) return;\n    const zeros = Array(this.inputDim - 3).fill(0);\n    const features = [this.year, this.stateEncoded, this.landUseEncoded, ...zeros];\n    this.predicting = true;\n    this.predictedUSD = null;\n    this.predictedTND = null;\n    // 1) get USD prediction\n    this.predictionService.predict(features).subscribe({\n      next: ({\n        predicted_price\n      }) => {\n        this.predictedUSD = predicted_price;\n        // 2) fetch current USD→TND rate\n        this.currencyService.getUsdToTndRate().subscribe({\n          next: rate => {\n            this.predictedTND = this.predictedUSD * rate;\n            this.predicting = false;\n          },\n          error: _ => {\n            console.warn('Could not fetch TND rate');\n            this.predicting = false;\n          }\n        });\n      },\n      error: err => {\n        console.error('Prediction error', err);\n        this.predicting = false;\n      }\n    });\n  }\n};\nPredictLandComponent = __decorate([Component({\n  selector: 'app-predict-land',\n  templateUrl: './predict-land.component.html',\n  styleUrls: ['./predict-land.component.scss']\n})], PredictLandComponent);\nexport { PredictLandComponent };","map":{"version":3,"names":["Component","PredictLandComponent","constructor","predictionService","currencyService","predictedUSD","predictedTND","predicting","inputDim","onSubmit","form","invalid","zeros","Array","fill","features","year","stateEncoded","landUseEncoded","predict","subscribe","next","predicted_price","getUsdToTndRate","rate","error","_","console","warn","err","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\predict-land\\predict-land.component.ts"],"sourcesContent":["// src/app/predict-land/predict-land.component.ts\nimport { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { PredictionService } from '../../Services/prediction.service';\nimport { CurrencyService }   from '../../Services/currency.service';\n\n@Component({\n  selector: 'app-predict-land',\n  templateUrl: './predict-land.component.html',\n  styleUrls: ['./predict-land.component.scss']\n})\nexport class PredictLandComponent {\n  year!: number;\n  stateEncoded!: number;\n  landUseEncoded!: number;\n  predictedUSD: number | null = null;\n  predictedTND: number | null = null;\n  predicting = false;\n\n  private inputDim = 25;\n\n  constructor(\n    private predictionService: PredictionService,\n    private currencyService:   CurrencyService\n  ) {}\n\n  onSubmit(form: NgForm) {\n    if (form.invalid) return;\n\n    const zeros   = Array(this.inputDim - 3).fill(0);\n    const features = [\n      this.year,\n      this.stateEncoded,\n      this.landUseEncoded,\n      ...zeros\n    ];\n\n    this.predicting    = true;\n    this.predictedUSD  = null;\n    this.predictedTND  = null;\n\n    // 1) get USD prediction\n    this.predictionService.predict(features).subscribe({\n      next: ({ predicted_price }) => {\n        this.predictedUSD = predicted_price;\n        // 2) fetch current USD→TND rate\n        this.currencyService.getUsdToTndRate().subscribe({\n          next: rate => {\n            this.predictedTND = this.predictedUSD! * rate;\n            this.predicting = false;\n          },\n          error: _ => {\n            console.warn('Could not fetch TND rate');\n            this.predicting = false;\n          }\n        });\n      },\n      error: err => {\n        console.error('Prediction error', err);\n        this.predicting = false;\n      }\n    });\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,eAAe;AAUzC,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAU/BC,YACUC,iBAAoC,EACpCC,eAAkC;IADlC,KAAAD,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,eAAe,GAAfA,eAAe;IARzB,KAAAC,YAAY,GAAkB,IAAI;IAClC,KAAAC,YAAY,GAAkB,IAAI;IAClC,KAAAC,UAAU,GAAG,KAAK;IAEV,KAAAC,QAAQ,GAAG,EAAE;EAKlB;EAEHC,QAAQA,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,OAAO,EAAE;IAElB,MAAMC,KAAK,GAAKC,KAAK,CAAC,IAAI,CAACL,QAAQ,GAAG,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC;IAChD,MAAMC,QAAQ,GAAG,CACf,IAAI,CAACC,IAAI,EACT,IAAI,CAACC,YAAY,EACjB,IAAI,CAACC,cAAc,EACnB,GAAGN,KAAK,CACT;IAED,IAAI,CAACL,UAAU,GAAM,IAAI;IACzB,IAAI,CAACF,YAAY,GAAI,IAAI;IACzB,IAAI,CAACC,YAAY,GAAI,IAAI;IAEzB;IACA,IAAI,CAACH,iBAAiB,CAACgB,OAAO,CAACJ,QAAQ,CAAC,CAACK,SAAS,CAAC;MACjDC,IAAI,EAAEA,CAAC;QAAEC;MAAe,CAAE,KAAI;QAC5B,IAAI,CAACjB,YAAY,GAAGiB,eAAe;QACnC;QACA,IAAI,CAAClB,eAAe,CAACmB,eAAe,EAAE,CAACH,SAAS,CAAC;UAC/CC,IAAI,EAAEG,IAAI,IAAG;YACX,IAAI,CAAClB,YAAY,GAAG,IAAI,CAACD,YAAa,GAAGmB,IAAI;YAC7C,IAAI,CAACjB,UAAU,GAAG,KAAK;UACzB,CAAC;UACDkB,KAAK,EAAEC,CAAC,IAAG;YACTC,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;YACxC,IAAI,CAACrB,UAAU,GAAG,KAAK;UACzB;SACD,CAAC;MACJ,CAAC;MACDkB,KAAK,EAAEI,GAAG,IAAG;QACXF,OAAO,CAACF,KAAK,CAAC,kBAAkB,EAAEI,GAAG,CAAC;QACtC,IAAI,CAACtB,UAAU,GAAG,KAAK;MACzB;KACD,CAAC;EACJ;CACD;AApDYN,oBAAoB,GAAA6B,UAAA,EALhC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWhC,oBAAoB,CAoDhC;SApDYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}