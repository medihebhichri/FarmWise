{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/weather.service\";\nimport * as i2 from \"../../Services/soil.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction WeatherComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\")(1, \"h3\");\n    i0.ÉµÉµtext(2, \"\\uD83C\\uDF26 Weather\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"p\");\n    i0.ÉµÉµtext(4);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(5, \"p\");\n    i0.ÉµÉµtext(6);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(7, \"p\");\n    i0.ÉµÉµtext(8);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(4);\n    i0.ÉµÉµtextInterpolate1(\"Temperature: \", ctx_r0.weatherData.temperature, \" \\u00B0C\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate1(\"Humidity: \", ctx_r0.weatherData.humidity, \" %\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate1(\"Rainfall: \", ctx_r0.weatherData.rainfall, \" mm\");\n  }\n}\nfunction WeatherComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\")(1, \"h3\");\n    i0.ÉµÉµtext(2, \"Soil\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"p\");\n    i0.ÉµÉµtext(4);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(5, \"p\");\n    i0.ÉµÉµtext(6);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(7, \"p\");\n    i0.ÉµÉµtext(8);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(9, \"p\");\n    i0.ÉµÉµtext(10);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(4);\n    i0.ÉµÉµtextInterpolate1(\"pH: \", ctx_r1.soilData.ph, \"\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate1(\"Nitrogen (N): \", ctx_r1.soilData.nitrogen, \" %\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate1(\"Phosphorus (P): \", ctx_r1.soilData.phosphorus, \" mg/kg\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate1(\"Potassium (K): \", ctx_r1.soilData.potassium, \" mg/kg\");\n  }\n}\nclass WeatherComponent {\n  constructor(weatherService, soilService) {\n    this.weatherService = weatherService;\n    this.soilService = soilService;\n    this.lat = 0;\n    this.lon = 0;\n    this.weatherData = null;\n    this.soilData = null;\n  }\n  fetchData() {\n    // Get weather\n    this.weatherService.getWeather(this.lat, this.lon).subscribe({\n      next: data => this.weatherData = data,\n      error: err => console.error('Weather error:', err)\n    });\n    // Get soil\n    this.soilService.getSoil(this.lat, this.lon).subscribe({\n      next: data => {\n        this.soilData = {\n          ph: data.ph ?? -1,\n          bdod: data.bdod ?? -1\n        };\n      },\n      error: err => console.error('Soil error:', err)\n    });\n  }\n}\nWeatherComponent.Éµfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ÉµÉµdirectiveInject(i1.WeatherService), i0.ÉµÉµdirectiveInject(i2.SoilService));\n};\nWeatherComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 7,\n  vars: 4,\n  consts: [[\"type\", \"number\", \"placeholder\", \"Latitude\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"placeholder\", \"Longitude\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ÉµÉµelementStart(0, \"div\")(1, \"input\", 0);\n      i0.ÉµÉµlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.lat = $event;\n      });\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(2, \"input\", 1);\n      i0.ÉµÉµlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.lon = $event;\n      });\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(3, \"button\", 2);\n      i0.ÉµÉµlistener(\"click\", function WeatherComponent_Template_button_click_3_listener() {\n        return ctx.fetchData();\n      });\n      i0.ÉµÉµtext(4, \"Get Weather & Soil\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµtemplate(5, WeatherComponent_div_5_Template, 9, 3, \"div\", 3);\n      i0.ÉµÉµtemplate(6, WeatherComponent_div_6_Template, 11, 4, \"div\", 3);\n    }\n    if (rf & 2) {\n      i0.ÉµÉµadvance(1);\n      i0.ÉµÉµproperty(\"ngModel\", ctx.lat);\n      i0.ÉµÉµadvance(1);\n      i0.ÉµÉµproperty(\"ngModel\", ctx.lon);\n      i0.ÉµÉµadvance(3);\n      i0.ÉµÉµproperty(\"ngIf\", ctx.weatherData);\n      i0.ÉµÉµadvance(1);\n      i0.ÉµÉµproperty(\"ngIf\", ctx.soilData);\n    }\n  },\n  dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel],\n  encapsulation: 2\n});\nexport { WeatherComponent };","map":{"version":3,"names":["i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµadvance","ÉµÉµtextInterpolate1","ctx_r0","weatherData","temperature","humidity","rainfall","ctx_r1","soilData","ph","nitrogen","phosphorus","potassium","WeatherComponent","constructor","weatherService","soilService","lat","lon","fetchData","getWeather","subscribe","next","data","error","err","console","getSoil","bdod","ÉµÉµdirectiveInject","i1","WeatherService","i2","SoilService","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ÉµÉµlistener","WeatherComponent_Template_input_ngModelChange_1_listener","$event","WeatherComponent_Template_input_ngModelChange_2_listener","WeatherComponent_Template_button_click_3_listener","ÉµÉµtemplate","WeatherComponent_div_5_Template","WeatherComponent_div_6_Template","ÉµÉµproperty"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\feature\\weather.component.ts","C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\feature\\weather.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from '../../Services/weather.service';\nimport { SoilService } from '../../Services/soil.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html'\n})\nexport class WeatherComponent {\n  lat: number = 0;\n  lon: number = 0;\n\n  weatherData: any = null;\n  soilData: { ph: number, bdod: number } | null = null;\n\n  constructor(\n    private weatherService: WeatherService,\n    private soilService: SoilService\n  ) {}\n\n  fetchData() {\n    // Get weather\n    this.weatherService.getWeather(this.lat, this.lon).subscribe({\n      next: (data) => this.weatherData = data,\n      error: (err) => console.error('Weather error:', err)\n    });\n\n    // Get soil\n    this.soilService.getSoil(this.lat, this.lon).subscribe({\n      next: (data) => {\n        this.soilData = {\n          ph: data.ph ?? -1,\n          bdod: data.bdod ?? -1\n        };\n      },\n      error: (err) => console.error('Soil error:', err)\n    });\n  }\n}\n","<div>\n  <input [(ngModel)]=\"lat\" type=\"number\" placeholder=\"Latitude\" />\n  <input [(ngModel)]=\"lon\" type=\"number\" placeholder=\"Longitude\" />\n  <button (click)=\"fetchData()\">Get Weather & Soil</button>\n</div>\n\n<div *ngIf=\"weatherData\">\n  <h3>ðŸŒ¦ Weather</h3>\n  <p>Temperature: {{ weatherData.temperature }} Â°C</p>\n  <p>Humidity: {{ weatherData.humidity }} %</p>\n  <p>Rainfall: {{ weatherData.rainfall }} mm</p>\n</div>\n<div *ngIf=\"soilData\">\n  <h3>Soil</h3>\n  <p>pH: {{ soilData.ph }}</p>\n  <p>Nitrogen (N): {{ soilData.nitrogen }} %</p>\n  <p>Phosphorus (P): {{ soilData.phosphorus }} mg/kg</p>\n  <p>Potassium (K): {{ soilData.potassium }} mg/kg</p>\n</div>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}