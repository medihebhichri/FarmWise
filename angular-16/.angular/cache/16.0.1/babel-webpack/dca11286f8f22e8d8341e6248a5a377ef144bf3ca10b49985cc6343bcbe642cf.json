{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ClassificationService {\n  constructor(http) {\n    this.http = http;\n    // Adjust this to your FastAPI host/port in production\n    this.apiUrl = 'http://localhost:8000';\n  }\n  predict(lat, lon) {\n    const params = new HttpParams().set('lat', lat.toString()).set('lon', lon.toString());\n    return this.http.get(`${this.apiUrl}/predict/`, {\n      params\n    });\n  }\n}\nClassificationService.ɵfac = function ClassificationService_Factory(t) {\n  return new (t || ClassificationService)(i0.ɵɵinject(i1.HttpClient));\n};\nClassificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClassificationService,\n  factory: ClassificationService.ɵfac,\n  providedIn: 'root'\n});\nexport { ClassificationService };","map":{"version":3,"names":["HttpParams","ClassificationService","constructor","http","apiUrl","predict","lat","lon","params","set","toString","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\Services\\classification.service.ts"],"sourcesContent":["// src/app/services/classification.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface PredictionResponse {\n  prediction: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ClassificationService {\n  // Adjust this to your FastAPI host/port in production\n  private apiUrl = 'http://localhost:8000';\n\n  constructor(private http: HttpClient) {}\n\n predict(lat: number, lon: number): Observable<{prediction: string, tile: string}> {\n  const params = new HttpParams()\n    .set('lat', lat.toString())\n    .set('lon', lon.toString());\n  return this.http.get<{prediction: string, tile: string}>(`${this.apiUrl}/predict/`, { params });\n}\n\n}\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAO7D,MACaC,qBAAqB;EAIhCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB;IACQ,KAAAC,MAAM,GAAG,uBAAuB;EAED;EAExCC,OAAOA,CAACC,GAAW,EAAEC,GAAW;IAC/B,MAAMC,MAAM,GAAG,IAAIR,UAAU,EAAE,CAC5BS,GAAG,CAAC,KAAK,EAAEH,GAAG,CAACI,QAAQ,EAAE,CAAC,CAC1BD,GAAG,CAAC,KAAK,EAAEF,GAAG,CAACG,QAAQ,EAAE,CAAC;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAqC,GAAG,IAAI,CAACP,MAAM,WAAW,EAAE;MAAEI;IAAM,CAAE,CAAC;EACjG;;AAXaP,qBAAqB,C;mBAArBA,qBAAqB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAArBd,qBAAqB,C;SAArBA,qBAAqB;EAAAe,OAAA,EAArBf,qBAAqB,CAAAgB,IAAA;EAAAC,UAAA,EADR;AAAM;SACnBjB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}