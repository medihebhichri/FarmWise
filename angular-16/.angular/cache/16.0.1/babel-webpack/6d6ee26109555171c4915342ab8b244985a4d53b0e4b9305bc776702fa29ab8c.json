{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass FeatureService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/predict';\n  }\n  recommend(payload) {\n    return this.http.post(this.apiUrl, payload);\n  }\n}\nFeatureService.ɵfac = function FeatureService_Factory(t) {\n  return new (t || FeatureService)(i0.ɵɵinject(i1.HttpClient));\n};\nFeatureService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FeatureService,\n  factory: FeatureService.ɵfac,\n  providedIn: 'root'\n});\nexport { FeatureService };","map":{"version":3,"names":["FeatureService","constructor","http","apiUrl","recommend","payload","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\Services\\feature.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface CropPayload {\n  K: number;\n  N: number;\n  P: number;\n  humidity: number;\n  ph: number;\n  rainfall: number;\n  temperature: number;\n}\n\nexport interface CropResponse {\n  recommended_crop: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FeatureService {\n  private apiUrl = 'http://localhost:5000/predict';\n\n  constructor(private http: HttpClient) {}\n\n  recommend(payload: CropPayload): Observable<CropResponse> {\n    return this.http.post<CropResponse>(this.apiUrl, payload);\n  }\n}\n"],"mappings":";;AAkBA,MACaA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,+BAA+B;EAET;EAEvCC,SAASA,CAACC,OAAoB;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAe,IAAI,CAACH,MAAM,EAAEE,OAAO,CAAC;EAC3D;;AAPWL,cAAc,C;mBAAdA,cAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdV,cAAc,C;SAAdA,cAAc;EAAAW,OAAA,EAAdX,cAAc,CAAAY,IAAA;EAAAC,UAAA,EADD;AAAM;SACnBb,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}