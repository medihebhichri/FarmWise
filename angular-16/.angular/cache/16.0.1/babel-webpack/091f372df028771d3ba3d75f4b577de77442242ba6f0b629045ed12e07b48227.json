{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/classification.service\";\nimport * as i2 from \"@angular/common\";\nfunction ClassifierComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.tileUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ClassifierComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"strong\");\n    i0.ɵɵtext(2, \"Prediction:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.prediction, \"\\n\");\n  }\n}\nfunction ClassifierComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.error, \"\\n\");\n  }\n}\nclass ClassifierComponent {\n  constructor(svc) {\n    this.svc = svc;\n    this.tileUrl = null;\n    this.prediction = null;\n    this.loading = false;\n    this.error = null;\n  }\n  ngAfterViewInit() {\n    // 1) Initialize the map\n    this.map = L.map('map', {\n      maxBounds: L.latLngBounds([-90, -180], [90, 180]),\n      maxBoundsViscosity: 1.0\n    }).setView([36.8065, 10.1815], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap'\n    }).addTo(this.map);\n    // 2) Ensure sizing is correct\n    setTimeout(() => this.map.invalidateSize(), 0);\n    // 3) Handle click\n    this.map.on('click', e => {\n      this.lat = e.latlng.lat;\n      this.lon = e.latlng.lng;\n    });\n  }\n  onSubmit() {\n    this.tileUrl = this.prediction = this.error = null;\n    this.loading = true;\n    this.svc.predict(this.lat, this.lon).subscribe({\n      next: res => {\n        this.prediction = res.prediction;\n        this.tileUrl = `data:image/png;base64,${res.tile}`;\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'Failed to load tile or prediction';\n        this.loading = false;\n      }\n    });\n  }\n}\nClassifierComponent.ɵfac = function ClassifierComponent_Factory(t) {\n  return new (t || ClassifierComponent)(i0.ɵɵdirectiveInject(i1.ClassificationService));\n};\nClassifierComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClassifierComponent,\n  selectors: [[\"app-classifier\"]],\n  decls: 8,\n  vars: 5,\n  consts: [[1, \"classifier-map\"], [\"id\", \"map\"], [1, \"text-center\", \"my-3\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [\"class\", \"text-center mb-3\", 4, \"ngIf\"], [\"class\", \"alert alert-success text-center\", 4, \"ngIf\"], [\"class\", \"alert alert-danger text-center\", 4, \"ngIf\"], [1, \"text-center\", \"mb-3\"], [\"alt\", \"Sentinel tile\", 1, \"img-fluid\", \"border\", \"rounded\", 3, \"src\"], [1, \"alert\", \"alert-success\", \"text-center\"], [1, \"alert\", \"alert-danger\", \"text-center\"]],\n  template: function ClassifierComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ClassifierComponent_Template_button_click_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, ClassifierComponent_div_5_Template, 2, 1, \"div\", 4);\n      i0.ɵɵtemplate(6, ClassifierComponent_div_6_Template, 4, 1, \"div\", 5);\n      i0.ɵɵtemplate(7, ClassifierComponent_div_7_Template, 2, 1, \"div\", 6);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.loading || ctx.lat == null || ctx.lon == null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Working\\u2026\" : \"Classify Land\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tileUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.prediction);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ClassifierComponent };","map":{"version":3,"names":["L","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","tileUrl","ɵɵsanitizeUrl","ɵɵtext","ɵɵtextInterpolate1","ctx_r1","prediction","ctx_r2","error","ClassifierComponent","constructor","svc","loading","ngAfterViewInit","map","maxBounds","latLngBounds","maxBoundsViscosity","setView","tileLayer","attribution","addTo","setTimeout","invalidateSize","on","e","lat","latlng","lon","lng","onSubmit","predict","subscribe","next","res","tile","ɵɵdirectiveInject","i1","ClassificationService","selectors","decls","vars","consts","template","ClassifierComponent_Template","rf","ctx","ɵɵlistener","ClassifierComponent_Template_button_click_3_listener","ɵɵtemplate","ClassifierComponent_div_5_Template","ClassifierComponent_div_6_Template","ClassifierComponent_div_7_Template"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\classifier\\classifier.component.ts","C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\classifier\\classifier.component.html"],"sourcesContent":["// src/app/components/classifier/classifier.component.ts\nimport { Component, AfterViewInit } from '@angular/core';\nimport * as L from 'leaflet';\nimport { ClassificationService } from 'src/app/Services/classification.service';\n\n@Component({\n  selector: 'app-classifier',\n  templateUrl: './classifier.component.html',\n  styleUrls: ['./classifier.component.scss']\n})\nexport class ClassifierComponent implements AfterViewInit {\n  private map!: L.Map;\n  lat!: number;\n  lon!: number;\n\n  tileUrl: string | null = null;\n  prediction: string | null = null;\n  loading = false;\n  error: string | null = null;\n\n  constructor(private svc: ClassificationService) {}\n\n  ngAfterViewInit(): void {\n    // 1) Initialize the map\n    this.map = L.map('map', {\n      maxBounds: L.latLngBounds([-90, -180], [90, 180]),\n      maxBoundsViscosity: 1.0,\n    }).setView([36.8065, 10.1815], 13);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap'\n    }).addTo(this.map);\n\n    // 2) Ensure sizing is correct\n    setTimeout(() => this.map.invalidateSize(), 0);\n\n    // 3) Handle click\n    this.map.on('click', e => {\n      this.lat = (e as any).latlng.lat;\n      this.lon = (e as any).latlng.lng;\n    });\n  }\n\n  onSubmit(): void {\n    this.tileUrl = this.prediction = this.error = null;\n    this.loading = true;\n\n    this.svc.predict(this.lat, this.lon).subscribe({\n      next: res => {\n        this.prediction = res.prediction;\n        this.tileUrl = `data:image/png;base64,${res.tile}`;\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'Failed to load tile or prediction';\n        this.loading = false;\n      }\n    });\n  }\n}\n","<!-- src/app/components/classifier/classifier.component.html -->\n<div class=\"classifier-map\">\n  <div id=\"map\"></div>\n</div>\n\n<div class=\"text-center my-3\">\n  <button \n    class=\"btn btn-success\"\n    (click)=\"onSubmit()\"\n    [disabled]=\"loading || lat == null || lon == null\">\n    {{ loading ? 'Working…' : 'Classify Land' }}\n  </button>\n</div>\n\n<!-- Show tile -->\n<div *ngIf=\"tileUrl\" class=\"text-center mb-3\">\n  <img [src]=\"tileUrl\" alt=\"Sentinel tile\" class=\"img-fluid border rounded\">\n</div>\n\n<!-- Show prediction -->\n<div *ngIf=\"prediction\" class=\"alert alert-success text-center\">\n  <strong>Prediction:</strong> {{ prediction }}\n</div>\n\n<!-- Show error -->\n<div *ngIf=\"error\" class=\"alert alert-danger text-center\">\n  {{ error }}\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}