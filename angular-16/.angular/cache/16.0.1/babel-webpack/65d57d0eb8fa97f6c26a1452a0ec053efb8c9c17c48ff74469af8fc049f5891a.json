{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CurrencyService {\n  constructor(http) {\n    this.http = http;\n    // Free, keyless endpoint with CORS enabled\n    this.apiUrl = 'https://open.er-api.com/v6/latest/USD';\n  }\n  /** Fetches and returns the USD→TND exchange rate */\n  getUsdToTndRate() {\n    return this.http.get(this.apiUrl).pipe(map(res => {\n      const rate = res.rates['TND'];\n      if (rate == null) {\n        throw new Error('TND rate not found in response');\n      }\n      return rate;\n    }));\n  }\n}\nCurrencyService.ɵfac = function CurrencyService_Factory(t) {\n  return new (t || CurrencyService)(i0.ɵɵinject(i1.HttpClient));\n};\nCurrencyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CurrencyService,\n  factory: CurrencyService.ɵfac,\n  providedIn: 'root'\n});\nexport { CurrencyService };","map":{"version":3,"names":["map","CurrencyService","constructor","http","apiUrl","getUsdToTndRate","get","pipe","res","rate","rates","Error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\Services\\currency.service.ts"],"sourcesContent":["// src/app/services/currency.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\n\ninterface ErApiResponse {\n  rates: Record<string, number>;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrencyService {\n  // Free, keyless endpoint with CORS enabled\n  private apiUrl = 'https://open.er-api.com/v6/latest/USD';\n\n  constructor(private http: HttpClient) {}\n\n  /** Fetches and returns the USD→TND exchange rate */\n  getUsdToTndRate(): Observable<number> {\n    return this.http.get<ErApiResponse>(this.apiUrl).pipe(\n      map(res => {\n        const rate = res.rates['TND'];\n        if (rate == null) {\n          throw new Error('TND rate not found in response');\n        }\n        return rate;\n      })\n    );\n  }\n}\n"],"mappings":"AAGA,SAAqBA,GAAG,QAAQ,MAAM;;;AAMtC,MAGaC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB;IACQ,KAAAC,MAAM,GAAG,uCAAuC;EAEjB;EAEvC;EACAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAgB,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CACnDP,GAAG,CAACQ,GAAG,IAAG;MACR,MAAMC,IAAI,GAAGD,GAAG,CAACE,KAAK,CAAC,KAAK,CAAC;MAC7B,IAAID,IAAI,IAAI,IAAI,EAAE;QAChB,MAAM,IAAIE,KAAK,CAAC,gCAAgC,CAAC;;MAEnD,OAAOF,IAAI;IACb,CAAC,CAAC,CACH;EACH;;AAjBWR,eAAe,C;mBAAfA,eAAe,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfd,eAAe,C;SAAfA,eAAe;EAAAe,OAAA,EAAff,eAAe,CAAAgB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPjB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}