{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CurrencyService {\n  constructor(http) {\n    this.http = http;\n    // Call your own FastAPI proxy\n    this.apiUrl = 'http://localhost:4000/rate';\n  }\n  getUsdToTndRate() {\n    return this.http.get(this.apiUrl).pipe(map(res => res.rate));\n  }\n}\nCurrencyService.ɵfac = function CurrencyService_Factory(t) {\n  return new (t || CurrencyService)(i0.ɵɵinject(i1.HttpClient));\n};\nCurrencyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CurrencyService,\n  factory: CurrencyService.ɵfac,\n  providedIn: 'root'\n});\nexport { CurrencyService };","map":{"version":3,"names":["map","CurrencyService","constructor","http","apiUrl","getUsdToTndRate","get","pipe","res","rate","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\Services\\currency.service.ts"],"sourcesContent":["// src/app/services/currency.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient }    from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class CurrencyService {\n  // Call your own FastAPI proxy\n  private apiUrl = 'http://localhost:4000/rate';\n\n  constructor(private http: HttpClient) {}\n\n  getUsdToTndRate(): Observable<number> {\n    return this.http.get<{ rate: number }>(this.apiUrl).pipe(\n      map(res => res.rate)\n    );\n  }\n}\n"],"mappings":"AAGA,SAAqBA,GAAG,QAAQ,MAAM;;;AAEtC,MACaC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB;IACQ,KAAAC,MAAM,GAAG,4BAA4B;EAEN;EAEvCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAmB,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CACtDP,GAAG,CAACQ,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACrB;EACH;;AAVWR,eAAe,C;mBAAfA,eAAe,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfZ,eAAe,C;SAAfA,eAAe;EAAAa,OAAA,EAAfb,eAAe,CAAAc,IAAA;EAAAC,UAAA,EADF;AAAM;SACnBf,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}