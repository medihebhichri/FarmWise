{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(authService, router, fb) {\n    this.authService = authService;\n    this.router = router;\n    this.fb = fb;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n    this.form = this.fb.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  onLogin() {\n    const credentials = {\n      username: this.username,\n      password: this.password\n    };\n    this.authService.signin(credentials).subscribe({\n      next: res => {\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('username', res.username);\n        localStorage.setItem('roles', JSON.stringify(res.roles));\n        const roleNames = res.roles;\n        if (roleNames.includes('ROLE_ADMIN')) {\n          this.router.navigate(['/dashboard']);\n        } else if (roleNames.includes('ROLE_USER')) {\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.router.navigate(['/']);\n        }\n      },\n      error: () => {\n        this.errorMessage = 'Invalid username or password';\n      }\n    });\n  }\n  onSubmit() {\n    if (this.form.valid) {\n      const {\n        email,\n        password\n      } = this.form.value;\n      this.username = email;\n      this.password = password;\n      this.onLogin();\n    } else {\n      this.errorMessage = 'Please fill in all required fields correctly.';\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 21,\n  vars: 2,\n  consts: [[1, \"auth-wrapper\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"card\", \"p-4\", 2, \"width\", \"350px\"], [1, \"text-center\", \"mb-3\"], [\"src\", \"assets/images/logos/farmwiselogo.png\", \"alt\", \"Farmwise Logo\", 2, \"width\", \"150px\"], [1, \"mb-3\", \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"], [1, \"mt-2\", \"text-center\"], [\"routerLink\", \"/auth/signup\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"h4\", 4);\n      i0.ɵɵtext(5, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 10);\n      i0.ɵɵtext(16, \" Sign In \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p\", 11);\n      i0.ɵɵtext(18, \" Don\\u2019t have an account? \");\n      i0.ɵɵelementStart(19, \"a\", 12);\n      i0.ɵɵtext(20, \"Sign up\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["Validators","LoginComponent","constructor","authService","router","fb","username","password","errorMessage","form","group","email","required","onLogin","credentials","signin","subscribe","next","res","localStorage","setItem","token","JSON","stringify","roles","roleNames","includes","navigate","error","onSubmit","valid","value","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","FormBuilder","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵadvance","ɵɵproperty","invalid"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\auth\\login\\login.component.ts","C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/Services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  standalone: false,\n  styleUrls: ['./login.component.scss'], \n})\nexport class LoginComponent {\n  username = '';\n  password = '';\n  errorMessage = '';\n  form: FormGroup;\n\n  constructor(private authService: AuthService, private router: Router, private fb: FormBuilder) {\n    this.form = this.fb.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  onLogin(): void {\n    const credentials = { username: this.username, password: this.password };\n  \n    this.authService.signin(credentials).subscribe({\n      next: (res) => {\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('username', res.username);\n        localStorage.setItem('roles', JSON.stringify(res.roles));\n  \n        const roleNames: string[] = res.roles;\n  \n        if (roleNames.includes('ROLE_ADMIN')) {\n          this.router.navigate(['/dashboard']);\n        } else if (roleNames.includes('ROLE_USER')) {\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.router.navigate(['/']);\n        }\n      },\n      error: () => {\n        this.errorMessage = 'Invalid username or password';\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      const { email, password } = this.form.value;\n      this.username = email;\n      this.password = password;\n      this.onLogin();\n    } else {\n      this.errorMessage = 'Please fill in all required fields correctly.';\n    }\n  }\n}\n","<div class=\"auth-wrapper d-flex align-items-center justify-content-center\">\n    <div class=\"card p-4\" style=\"width: 350px;\">\n        <div class=\"text-center mb-3\">\n            <img src=\"assets/images/logos/farmwiselogo.png\" alt=\"Farmwise Logo\" style=\"width: 150px;\">\n        </div>\n        <h4 class=\"mb-3 text-center\">Login</h4>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Email</label>\n                <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Password</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n            </div>\n            <button class=\"btn btn-primary w-100\" [disabled]=\"form.invalid\">\n                Sign In\n            </button>\n            <p class=\"mt-2 text-center\">\n                Don’t have an account?\n                <a routerLink=\"/auth/signup\">Sign up</a>\n            </p>\n        </form>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}