{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/classification.service\";\nimport * as i2 from \"@angular/common\";\nfunction ClassifierComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.tileUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ClassifierComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"strong\");\n    i0.ɵɵtext(2, \"Prediction:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.prediction, \"\\n\");\n  }\n}\nfunction ClassifierComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.error, \"\\n\");\n  }\n}\nclass ClassifierComponent {\n  constructor(svc) {\n    this.svc = svc;\n    this.tileUrl = null;\n    this.prediction = null;\n    this.loading = false;\n    this.error = null;\n  }\n  ngOnInit() {\n    this.map = L.map('map', {\n      maxBounds: L.latLngBounds(L.latLng(-90, -180), L.latLng(90, 180)),\n      maxBoundsViscosity: 1.0\n    }).setView([36.8065, 10.1815], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(this.map);\n    this.map.on('click', e => {\n      this.lat = e.latlng.lat;\n      this.lon = e.latlng.lng;\n    });\n  }\n  ngAfterViewInit() {\n    const button = document.querySelector('.classifier-form button');\n    if (button) {\n      L.DomEvent.disableClickPropagation(button);\n    }\n  }\n  onSubmit() {\n    this.reset();\n    this.loading = true;\n    this.svc.predict(this.lat, this.lon).subscribe({\n      next: res => {\n        this.prediction = res.prediction;\n        this.tileUrl = `data:image/png;base64,${res.tile}`;\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'Failed to load tile or prediction';\n        this.loading = false;\n      }\n    });\n  }\n  reset() {\n    this.tileUrl = null;\n    this.prediction = null;\n    this.error = null;\n  }\n}\nClassifierComponent.ɵfac = function ClassifierComponent_Factory(t) {\n  return new (t || ClassifierComponent)(i0.ɵɵdirectiveInject(i1.ClassificationService));\n};\nClassifierComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClassifierComponent,\n  selectors: [[\"app-classifier\"]],\n  decls: 8,\n  vars: 5,\n  consts: [[1, \"classifier-map\"], [\"id\", \"map\"], [1, \"text-center\", \"my-3\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [\"class\", \"text-center mb-3\", 4, \"ngIf\"], [\"class\", \"alert alert-success text-center\", 4, \"ngIf\"], [\"class\", \"alert alert-danger text-center\", 4, \"ngIf\"], [1, \"text-center\", \"mb-3\"], [\"alt\", \"Sentinel tile\", 1, \"img-fluid\", \"border\", \"rounded\", 3, \"src\"], [1, \"alert\", \"alert-success\", \"text-center\"], [1, \"alert\", \"alert-danger\", \"text-center\"]],\n  template: function ClassifierComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ClassifierComponent_Template_button_click_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, ClassifierComponent_div_5_Template, 2, 1, \"div\", 4);\n      i0.ɵɵtemplate(6, ClassifierComponent_div_6_Template, 4, 1, \"div\", 5);\n      i0.ɵɵtemplate(7, ClassifierComponent_div_7_Template, 2, 1, \"div\", 6);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.loading || ctx.lat == null || ctx.lon == null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Working\\u2026\" : \"Classify Land\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tileUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.prediction);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\".classifier-map[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 600px;\\n  height: 300px;\\n  margin: 0 auto;\\n  border: 2px solid #ccc;\\n  border-radius: 8px;\\n}\\n\\n#map[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvY2xhc3NpZmllci9jbGFzc2lmaWVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDREQUFBO0FBQ0E7RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFDQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0FBRUYiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBzcmMvYXBwL2NvbXBvbmVudHMvY2xhc3NpZmllci9jbGFzc2lmaWVyLmNvbXBvbmVudC5zY3NzICovXHJcbi5jbGFzc2lmaWVyLW1hcCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWF4LXdpZHRoOiA2MDBweDtcclxuICBoZWlnaHQ6IDMwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG59XHJcbiNtYXAge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { ClassifierComponent };","map":{"version":3,"names":["L","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","tileUrl","ɵɵsanitizeUrl","ɵɵtext","ɵɵtextInterpolate1","ctx_r1","prediction","ctx_r2","error","ClassifierComponent","constructor","svc","loading","ngOnInit","map","maxBounds","latLngBounds","latLng","maxBoundsViscosity","setView","tileLayer","attribution","addTo","on","e","lat","latlng","lon","lng","ngAfterViewInit","button","document","querySelector","DomEvent","disableClickPropagation","onSubmit","reset","predict","subscribe","next","res","tile","ɵɵdirectiveInject","i1","ClassificationService","selectors","decls","vars","consts","template","ClassifierComponent_Template","rf","ctx","ɵɵlistener","ClassifierComponent_Template_button_click_3_listener","ɵɵtemplate","ClassifierComponent_div_5_Template","ClassifierComponent_div_6_Template","ClassifierComponent_div_7_Template"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\classifier\\classifier.component.ts","C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\classifier\\classifier.component.html"],"sourcesContent":["// src/app/components/classifier/classifier.component.ts\nimport { Component, AfterViewInit, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\nimport { ClassificationService, PredictionResponse } from 'src/app/Services/classification.service';\n\n@Component({\n  selector: 'app-classifier',\n  templateUrl: './classifier.component.html',\n  styleUrls: ['./classifier.component.scss']\n})\nexport class ClassifierComponent implements OnInit, AfterViewInit {\n  lat!: number;\n  lon!: number;\n\n  tileUrl: string | null = null;\n  prediction: string | null = null;\n  loading = false;\n  error: string | null = null;\n\n  private map!: L.Map;\n\n  constructor(private svc: ClassificationService) {}\n\n  ngOnInit(): void {\n    this.map = L.map('map', {\n      maxBounds: L.latLngBounds(\n        L.latLng(-90, -180),\n        L.latLng(90, 180)\n      ),\n      maxBoundsViscosity: 1.0\n    }).setView([36.8065, 10.1815], 13);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(this.map);\n\n    this.map.on('click', (e: any) => {\n      this.lat = e.latlng.lat;\n      this.lon = e.latlng.lng;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    const button = document.querySelector('.classifier-form button') as HTMLElement;\n    if (button) {\n      L.DomEvent.disableClickPropagation(button);\n    }\n  }\n\n  onSubmit(): void {\n    this.reset();\n    this.loading = true;\n\n    this.svc.predict(this.lat, this.lon).subscribe({\n      next: (res: PredictionResponse & { tile: string }) => {\n        this.prediction = res.prediction;\n        this.tileUrl = `data:image/png;base64,${res.tile}`;\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'Failed to load tile or prediction';\n        this.loading = false;\n      }\n    });\n  }\n\n  private reset(): void {\n    this.tileUrl = null;\n    this.prediction = null;\n    this.error = null;\n  }\n}\n","<!-- src/app/components/classifier/classifier.component.html -->\n<div class=\"classifier-map\">\n  <div id=\"map\"></div>\n</div>\n\n<div class=\"text-center my-3\">\n  <button \n    class=\"btn btn-success\"\n    (click)=\"onSubmit()\"\n    [disabled]=\"loading || lat == null || lon == null\">\n    {{ loading ? 'Working…' : 'Classify Land' }}\n  </button>\n</div>\n\n<!-- Show tile -->\n<div *ngIf=\"tileUrl\" class=\"text-center mb-3\">\n  <img [src]=\"tileUrl\" alt=\"Sentinel tile\" class=\"img-fluid border rounded\">\n</div>\n\n<!-- Show prediction -->\n<div *ngIf=\"prediction\" class=\"alert alert-success text-center\">\n  <strong>Prediction:</strong> {{ prediction }}\n</div>\n\n<!-- Show error -->\n<div *ngIf=\"error\" class=\"alert alert-danger text-center\">\n  {{ error }}\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}