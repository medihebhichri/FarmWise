{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/weather.service\";\nimport * as i2 from \"../../Services/crop.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction WeatherComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"h5\", 11);\n    i0.ɵɵtext(3, \"Weather\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"\\uD83C\\uDF21\\uFE0F Temperature: \");\n    i0.ɵɵelementStart(6, \"strong\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9, \"\\uD83D\\uDCA7 Humidity: \");\n    i0.ɵɵelementStart(10, \"strong\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵtext(13, \"\\uD83C\\uDF27\\uFE0F Rainfall: \");\n    i0.ɵɵelementStart(14, \"strong\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.weatherData.temperature, \" \\u00B0C\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.weatherData.humidity, \" %\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.weatherData.rainfall, \" mm\");\n  }\n}\nfunction WeatherComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" \\uD83C\\uDF31 \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"Recommended Crop:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.predictedCrop, \" \");\n  }\n}\nfunction WeatherComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.error, \" \");\n  }\n}\nclass WeatherComponent {\n  constructor(weatherService, cropService) {\n    this.weatherService = weatherService;\n    this.cropService = cropService;\n    this.lat = 36.8;\n    this.lon = 10.2;\n    this.predictedCrop = null;\n    this.weatherData = null;\n    this.marker = null;\n    this.loading = false; // Added loading property\n    this.error = null; // Added error property\n    this.soilData = {\n      ph: 6.5,\n      N: 0.3,\n      P: 35,\n      K: 50\n    };\n  }\n  ngAfterViewInit() {\n    const map = L.map('map').setView([this.lat, this.lon], 6);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; OpenStreetMap contributors'\n    }).addTo(map);\n    map.on('click', e => {\n      this.lat = e.latlng.lat;\n      this.lon = e.latlng.lng;\n      if (this.marker) this.marker.remove();\n      this.marker = L.marker([this.lat, this.lon]).addTo(map);\n      this.fetchWeather(); // auto-fetch weather after selection\n    });\n  }\n\n  fetchWeather() {\n    this.loading = true; // Set loading to true when fetching weather\n    this.weatherService.getWeather(this.lat, this.lon).subscribe({\n      next: data => {\n        this.weatherData = data;\n        this.loading = false; // Set loading to false on successful data fetch\n      },\n\n      error: err => {\n        console.error('Weather error:', err);\n        this.error = 'Failed to load weather data.'; // Set error message\n        this.loading = false; // Set loading to false on error\n      }\n    });\n  }\n\n  onSubmit() {\n    if (!this.weatherData) {\n      alert(\"Please click on the map to select a location and fetch weather.\");\n      return;\n    }\n    const input = {\n      K: this.soilData.K,\n      N: this.soilData.N,\n      P: this.soilData.P,\n      ph: this.soilData.ph,\n      humidity: this.weatherData.humidity,\n      temperature: this.weatherData.temperature,\n      rainfall: this.weatherData.rainfall\n    };\n    this.cropService.predictCrop(input).subscribe({\n      next: res => this.predictedCrop = res.recommended_crop,\n      error: err => console.error('Prediction error:', err)\n    });\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.WeatherService), i0.ɵɵdirectiveInject(i2.CropService));\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 37,\n  vars: 11,\n  consts: [[1, \"text-center\", \"mt-4\"], [1, \"row\", \"mt-4\"], [1, \"col-md-6\"], [\"id\", \"map\", 1, \"border\", \"rounded\", 2, \"height\", \"400px\"], [1, \"text-center\", \"mt-3\"], [1, \"btn\", \"btn-success\", \"btn-lg\", 3, \"disabled\", \"click\"], [1, \"text-center\", \"mt-2\"], [1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"click\"], [1, \"text-center\", \"text-muted\", \"mt-2\"], [1, \"card\", \"shadow-sm\", \"mb-3\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"mb-2\"], [\"type\", \"number\", \"step\", \"0.1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"step\", \"0.01\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"step\", \"1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"card shadow-sm mb-3\", 4, \"ngIf\"], [\"class\", \"alert alert-success text-center\", 4, \"ngIf\"], [\"class\", \"alert alert-danger text-center\", 4, \"ngIf\"], [1, \"alert\", \"alert-success\", \"text-center\"], [1, \"alert\", \"alert-danger\", \"text-center\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Crop Recommendation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n      i0.ɵɵelement(4, \"div\", 3);\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_9_listener() {\n        return ctx.fetchWeather();\n      });\n      i0.ɵɵtext(10, \"\\uD83C\\uDF24 Fetch Weather\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"div\", 9)(15, \"div\", 10)(16, \"h5\", 11);\n      i0.ɵɵtext(17, \"Soil Inputs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 12)(19, \"label\");\n      i0.ɵɵtext(20, \"pH\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.soilData.ph = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 12)(23, \"label\");\n      i0.ɵɵtext(24, \"Nitrogen (N)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.soilData.N = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 12)(27, \"label\");\n      i0.ɵɵtext(28, \"Phosphorus (P)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.soilData.P = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 12)(31, \"label\");\n      i0.ɵɵtext(32, \"Potassium (K)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.soilData.K = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(34, WeatherComponent_div_34_Template, 16, 3, \"div\", 16);\n      i0.ɵɵtemplate(35, WeatherComponent_div_35_Template, 5, 1, \"div\", 17);\n      i0.ɵɵtemplate(36, WeatherComponent_div_36_Template, 2, 1, \"div\", 18);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !ctx.weatherData || ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Predicting...\" : \"Recommend Crop\", \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate2(\" \\uD83D\\uDCCD Selected: \", ctx.lat.toFixed(4), \", \", ctx.lon.toFixed(4), \" \");\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.soilData.ph);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.soilData.N);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.soilData.P);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.soilData.K);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.predictedCrop);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n    }\n  },\n  dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 30px auto;\\n  padding: 0 16px;\\n  font-family: \\\"Segoe UI\\\", sans-serif;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 24px;\\n  font-size: 28px;\\n  color: #1d3b53;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 20px;\\n  margin-bottom: 24px;\\n  border-radius: 12px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\\n}\\n\\n.map-container[_ngcontent-%COMP%] {\\n  height: 400px;\\n  width: 100%;\\n  border: 2px solid #ddd;\\n  border-radius: 8px;\\n  margin-bottom: 12px;\\n}\\n\\n.form-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\\n  gap: 12px;\\n  margin-top: 10px;\\n}\\n\\ninput[type=number][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 6px;\\n  border: 1px solid #ccc;\\n  border-radius: 6px;\\n  font-size: 14px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-top: 14px;\\n  padding: 10px 18px;\\n  background-color: #2e7d32;\\n  color: white;\\n  border: none;\\n  border-radius: 8px;\\n  font-size: 15px;\\n  cursor: pointer;\\n  transition: background 0.3s ease;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #1b5e20;\\n}\\n\\n.info-text[_ngcontent-%COMP%] {\\n  color: #555;\\n  font-size: 14px;\\n}\\n\\n.result-card[_ngcontent-%COMP%] {\\n  text-align: center;\\n  background-color: #e8f5e9;\\n  border: 2px solid #66bb6a;\\n}\\n\\n.predicted[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  font-weight: bold;\\n  color: #2e7d32;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZmVhdHVyZS93ZWF0aGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxtQ0FBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0EsMENBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxXQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsMkRBQUE7RUFDQSxTQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLGdDQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSx5QkFBQTtBQUNGOztBQUVBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgbWF4LXdpZHRoOiA4MDBweDtcclxuICBtYXJnaW46IDMwcHggYXV0bztcclxuICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSScsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgZm9udC1zaXplOiAyOHB4O1xyXG4gIGNvbG9yOiAjMWQzYjUzO1xyXG59XHJcblxyXG4uY2FyZCB7XHJcbiAgYmFja2dyb3VuZDogI2ZmZjtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4wOCk7XHJcbn1cclxuXHJcbi5tYXAtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDQwMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICNkZGQ7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEycHg7XHJcbn1cclxuXHJcbi5mb3JtLWdyaWQge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgxNjBweCwgMWZyKSk7XHJcbiAgZ2FwOiAxMnB4O1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJudW1iZXJcIl0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDZweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luLXRvcDogMTRweDtcclxuICBwYWRkaW5nOiAxMHB4IDE4cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJlN2QzMjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBmb250LXNpemU6IDE1cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBlYXNlO1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMxYjVlMjA7XHJcbn1cclxuXHJcbi5pbmZvLXRleHQge1xyXG4gIGNvbG9yOiAjNTU1O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLnJlc3VsdC1jYXJkIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U4ZjVlOTtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjNjZiYjZhO1xyXG59XHJcblxyXG4ucHJlZGljdGVkIHtcclxuICBmb250LXNpemU6IDI0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICMyZTdkMzI7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { WeatherComponent };","map":{"version":3,"names":["L","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","weatherData","temperature","humidity","rainfall","ctx_r1","predictedCrop","ctx_r2","error","WeatherComponent","constructor","weatherService","cropService","lat","lon","marker","loading","soilData","ph","N","P","K","ngAfterViewInit","map","setView","tileLayer","attribution","addTo","on","e","latlng","lng","remove","fetchWeather","getWeather","subscribe","next","data","err","console","onSubmit","alert","input","predictCrop","res","recommended_crop","ɵɵdirectiveInject","i1","WeatherService","i2","CropService","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","WeatherComponent_Template_button_click_6_listener","WeatherComponent_Template_button_click_9_listener","WeatherComponent_Template_input_ngModelChange_21_listener","$event","WeatherComponent_Template_input_ngModelChange_25_listener","WeatherComponent_Template_input_ngModelChange_29_listener","WeatherComponent_Template_input_ngModelChange_33_listener","ɵɵtemplate","WeatherComponent_div_34_Template","WeatherComponent_div_35_Template","WeatherComponent_div_36_Template","ɵɵproperty","ɵɵtextInterpolate2","toFixed"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\feature\\weather.component.ts","C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\feature\\weather.component.html"],"sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\nimport * as L from 'leaflet';\nimport { WeatherService } from '../../Services/weather.service';\nimport { CropService } from '../../Services/crop.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss'],\n})\nexport class WeatherComponent implements AfterViewInit {\n  lat: number = 36.8;\n  lon: number = 10.2;\n  predictedCrop: string | null = null;\n  weatherData: any = null;\n  marker: L.Marker | null = null;\n  loading: boolean = false; // Added loading property\n  error: string | null = null; // Added error property\n\n  soilData = {\n    ph: 6.5,\n    N: 0.3,\n    P: 35,\n    K: 50\n  };\n\n  constructor(\n    private weatherService: WeatherService,\n    private cropService: CropService\n  ) {}\n\n  ngAfterViewInit(): void {\n    const map = L.map('map').setView([this.lat, this.lon], 6);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; OpenStreetMap contributors'\n    }).addTo(map);\n\n    map.on('click', (e: L.LeafletMouseEvent) => {\n      this.lat = e.latlng.lat;\n      this.lon = e.latlng.lng;\n\n      if (this.marker) this.marker.remove();\n      this.marker = L.marker([this.lat, this.lon]).addTo(map);\n\n      this.fetchWeather(); // auto-fetch weather after selection\n    });\n  }\n\n  fetchWeather() {\n    this.loading = true; // Set loading to true when fetching weather\n    this.weatherService.getWeather(this.lat, this.lon).subscribe({\n      next: (data) => {\n        this.weatherData = data;\n        this.loading = false; // Set loading to false on successful data fetch\n      },\n      error: (err) => {\n        console.error('Weather error:', err);\n        this.error = 'Failed to load weather data.'; // Set error message\n        this.loading = false; // Set loading to false on error\n      }\n    });\n  }\n\n  onSubmit() {\n    if (!this.weatherData) {\n      alert(\"Please click on the map to select a location and fetch weather.\");\n      return;\n    }\n\n    const input = {\n      K: this.soilData.K,\n      N: this.soilData.N,\n      P: this.soilData.P,\n      ph: this.soilData.ph,\n      humidity: this.weatherData.humidity,\n      temperature: this.weatherData.temperature,\n      rainfall: this.weatherData.rainfall\n    };\n\n    this.cropService.predictCrop(input).subscribe({\n      next: (res) => this.predictedCrop = res.recommended_crop,\n      error: (err) => console.error('Prediction error:', err)\n    });\n  }\n}\n","<h1 class=\"text-center mt-4\">Crop Recommendation</h1> <!-- Added page title -->\n\n<div class=\"row mt-4\">\n  <!-- Left column: Map and Submit -->\n  <div class=\"col-md-6\">\n    <div id=\"map\" class=\"border rounded\" style=\"height: 400px;\"></div>\n\n    <div class=\"text-center mt-3\">\n      <button\n        class=\"btn btn-success btn-lg\"\n        (click)=\"onSubmit()\"\n        [disabled]=\"!weatherData || loading\">\n        {{ loading ? 'Predicting...' : 'Recommend Crop' }}\n      </button>\n    </div>\n\n    <div class=\"text-center mt-2\">\n      <button class=\"btn btn-info btn-sm\" (click)=\"fetchWeather()\">🌤 Fetch Weather</button>\n    </div>\n\n    <div class=\"text-center text-muted mt-2\">\n      📍 Selected: {{ lat.toFixed(4) }}, {{ lon.toFixed(4) }}\n    </div>\n  </div>\n\n  <!-- Right column: Inputs + Results -->\n  <div class=\"col-md-6\">\n    <div class=\"card shadow-sm mb-3\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Soil Inputs</h5>\n        <div class=\"mb-2\">\n          <label>pH</label>\n          <input type=\"number\" step=\"0.1\" [(ngModel)]=\"soilData.ph\" class=\"form-control\" />\n        </div>\n        <div class=\"mb-2\">\n          <label>Nitrogen (N)</label>\n          <input type=\"number\" step=\"0.01\" [(ngModel)]=\"soilData.N\" class=\"form-control\" />\n        </div>\n        <div class=\"mb-2\">\n          <label>Phosphorus (P)</label>\n          <input type=\"number\" step=\"1\" [(ngModel)]=\"soilData.P\" class=\"form-control\" />\n        </div>\n        <div class=\"mb-2\">\n          <label>Potassium (K)</label>\n          <input type=\"number\" step=\"1\" [(ngModel)]=\"soilData.K\" class=\"form-control\" />\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"weatherData\" class=\"card shadow-sm mb-3\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Weather</h5>\n        <p>🌡️ Temperature: <strong>{{ weatherData.temperature }} °C</strong></p>\n        <p>💧 Humidity: <strong>{{ weatherData.humidity }} %</strong></p>\n        <p>🌧️ Rainfall: <strong>{{ weatherData.rainfall }} mm</strong></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"predictedCrop\" class=\"alert alert-success text-center\">\n      🌱 <strong>Recommended Crop:</strong> {{ predictedCrop }}\n    </div>\n\n    <div *ngIf=\"error\" class=\"alert alert-danger text-center\">\n      {{ error }}\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}