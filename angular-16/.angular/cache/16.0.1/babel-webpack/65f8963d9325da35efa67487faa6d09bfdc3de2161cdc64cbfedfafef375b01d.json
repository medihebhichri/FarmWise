{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nclass LoginComponent {\n  constructor(authService, router, fb) {\n    this.authService = authService;\n    this.router = router;\n    this.fb = fb;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n    this.form = this.fb.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  onLogin() {\n    const credentials = {\n      username: this.username,\n      password: this.password\n    };\n    this.authService.signin(credentials).subscribe({\n      next: res => {\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('username', res.username);\n        localStorage.setItem('roles', JSON.stringify(res.roles));\n        const roleNames = res.roles;\n        if (roleNames.includes('ROLE_ADMIN')) {\n          this.router.navigate(['/dashboard']);\n        } else if (roleNames.includes('ROLE_USER')) {\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.router.navigate(['/']);\n        }\n      },\n      error: () => {\n        this.errorMessage = 'Invalid username or password';\n      }\n    });\n  }\n  onSubmit() {\n    if (this.form.valid) {\n      const {\n        email,\n        password\n      } = this.form.value;\n      this.username = email;\n      this.password = password;\n      this.onLogin();\n    } else {\n      this.errorMessage = 'Please fill in all required fields correctly.';\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 20,\n  vars: 3,\n  consts: [[1, \"auth-wrapper\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"card\", \"p-4\", 2, \"width\", \"350px\"], [1, \"mb-3\", \"text-center\"], [3, \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"w-100\"], [\"style\", \"color:red;\", \"class\", \"mt-2 text-center\", 4, \"ngIf\"], [1, \"mt-2\", \"text-center\"], [\"routerLink\", \"/auth/signup\"], [1, \"mt-2\", \"text-center\", 2, \"color\", \"red\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(5, \"mat-form-field\", 4)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"mat-form-field\", 4)(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵtext(14, \"Sign In\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, LoginComponent_p_15_Template, 2, 1, \"p\", 8);\n      i0.ɵɵelementStart(16, \"p\", 9);\n      i0.ɵɵtext(17, \" Don\\u2019t have an account? \");\n      i0.ɵɵelementStart(18, \"a\", 10);\n      i0.ɵɵtext(19, \"Sign up\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginComponent","constructor","authService","router","fb","username","password","form","group","email","required","onLogin","credentials","signin","subscribe","next","res","localStorage","setItem","token","JSON","stringify","roles","roleNames","includes","navigate","error","onSubmit","valid","value","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","FormBuilder","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_8_listener","$event","LoginComponent_Template_input_ngModelChange_12_listener","ɵɵtemplate","LoginComponent_p_15_Template","ɵɵproperty"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\auth\\login\\login.component.ts","C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/Services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  standalone: false,\n  styleUrls: ['./login.component.scss'], \n})\nexport class LoginComponent {\n  username = '';\n  password = '';\n  errorMessage = '';\n  form: FormGroup;\n\n  constructor(private authService: AuthService, private router: Router, private fb: FormBuilder) {\n    this.form = this.fb.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  onLogin(): void {\n    const credentials = { username: this.username, password: this.password };\n  \n    this.authService.signin(credentials).subscribe({\n      next: (res) => {\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('username', res.username);\n        localStorage.setItem('roles', JSON.stringify(res.roles));\n  \n        const roleNames: string[] = res.roles;\n  \n        if (roleNames.includes('ROLE_ADMIN')) {\n          this.router.navigate(['/dashboard']);\n        } else if (roleNames.includes('ROLE_USER')) {\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.router.navigate(['/']);\n        }\n      },\n      error: () => {\n        this.errorMessage = 'Invalid username or password';\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      const { email, password } = this.form.value;\n      this.username = email;\n      this.password = password;\n      this.onLogin();\n    } else {\n      this.errorMessage = 'Please fill in all required fields correctly.';\n    }\n  }\n}\n","<div class=\"auth-wrapper d-flex align-items-center justify-content-center\">\n  <div class=\"card p-4\" style=\"width: 350px;\">\n    <h4 class=\"mb-3 text-center\">Login</h4>\n    <form (ngSubmit)=\"onLogin()\">\n      <mat-form-field appearance=\"fill\" class=\"full-width\">\n        <mat-label>Email</mat-label>\n        <input matInput [(ngModel)]=\"username\" name=\"username\" required>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"full-width\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\" type=\"submit\" class=\"w-100\">Sign In</button>\n    </form>\n    <p *ngIf=\"errorMessage\" style=\"color:red;\" class=\"mt-2 text-center\">{{ errorMessage }}</p>\n    <p class=\"mt-2 text-center\">\n      Don’t have an account?\n      <a routerLink=\"/auth/signup\">Sign up</a>\n    </p>\n  </div>\n</div>\n"],"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICa/DC,EAAA,CAAAC,cAAA,YAAoE;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAtBH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,YAAA,CAAkB;;;ADX1F,MAMaC,cAAc;EAMzBC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,EAAe;IAAzE,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,EAAE,GAAFA,EAAE;IALhF,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAP,YAAY,GAAG,EAAE;IAIf,IAAI,CAACQ,IAAI,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MACxBC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACmB,QAAQ,CAAC,CAAC;MAClCJ,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACmB,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAC,OAAOA,CAAA;IACL,MAAMC,WAAW,GAAG;MAAEP,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE;IAExE,IAAI,CAACJ,WAAW,CAACW,MAAM,CAACD,WAAW,CAAC,CAACE,SAAS,CAAC;MAC7CC,IAAI,EAAGC,GAAG,IAAI;QACZC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,GAAG,CAACG,KAAK,CAAC;QACxCF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,GAAG,CAACX,QAAQ,CAAC;QAC9CY,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEE,IAAI,CAACC,SAAS,CAACL,GAAG,CAACM,KAAK,CAAC,CAAC;QAExD,MAAMC,SAAS,GAAaP,GAAG,CAACM,KAAK;QAErC,IAAIC,SAAS,CAACC,QAAQ,CAAC,YAAY,CAAC,EAAE;UACpC,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;SACrC,MAAM,IAAIF,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;UAC1C,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;SACrC,MAAM;UACL,IAAI,CAACtB,MAAM,CAACsB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;MAE/B,CAAC;MACDC,KAAK,EAAEA,CAAA,KAAK;QACV,IAAI,CAAC3B,YAAY,GAAG,8BAA8B;MACpD;KACD,CAAC;EACJ;EAEA4B,QAAQA,CAAA;IACN,IAAI,IAAI,CAACpB,IAAI,CAACqB,KAAK,EAAE;MACnB,MAAM;QAAEnB,KAAK;QAAEH;MAAQ,CAAE,GAAG,IAAI,CAACC,IAAI,CAACsB,KAAK;MAC3C,IAAI,CAACxB,QAAQ,GAAGI,KAAK;MACrB,IAAI,CAACH,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACK,OAAO,EAAE;KACf,MAAM;MACL,IAAI,CAACZ,YAAY,GAAG,+CAA+C;;EAEvE;;AA/CWC,cAAc,C;mBAAdA,cAAc,EAAAR,EAAA,CAAAsC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAxC,EAAA,CAAAsC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAA1C,EAAA,CAAAsC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;AAAA;AAAdpC,cAAc,C;QAAdA,cAAc;EAAAqC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX3BnD,EAAA,CAAAC,cAAA,aAA2E;MAE1CD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACvCH,EAAA,CAAAC,cAAA,cAA6B;MAAvBD,EAAA,CAAAqD,UAAA,sBAAAC,iDAAA;QAAA,OAAYF,GAAA,CAAAjC,OAAA,EAAS;MAAA,EAAC;MAC1BnB,EAAA,CAAAC,cAAA,wBAAqD;MACxCD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAC5BH,EAAA,CAAAC,cAAA,eAAgE;MAAhDD,EAAA,CAAAqD,UAAA,2BAAAE,uDAAAC,MAAA;QAAA,OAAAJ,GAAA,CAAAvC,QAAA,GAAA2C,MAAA;MAAA,EAAsB;MAAtCxD,EAAA,CAAAG,YAAA,EAAgE;MAGlEH,EAAA,CAAAC,cAAA,wBAAqD;MACxCD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAC/BH,EAAA,CAAAC,cAAA,gBAAgF;MAAhDD,EAAA,CAAAqD,UAAA,2BAAAI,wDAAAD,MAAA;QAAA,OAAAJ,GAAA,CAAAtC,QAAA,GAAA0C,MAAA;MAAA,EAAsB;MAAtDxD,EAAA,CAAAG,YAAA,EAAgF;MAGlFH,EAAA,CAAAC,cAAA,iBAAsE;MAAAD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAExFH,EAAA,CAAA0D,UAAA,KAAAC,4BAAA,eAA0F;MAC1F3D,EAAA,CAAAC,cAAA,YAA4B;MAC1BD,EAAA,CAAAE,MAAA,qCACA;MAAAF,EAAA,CAAAC,cAAA,aAA6B;MAAAD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAI;;;MAbtBH,EAAA,CAAAI,SAAA,GAAsB;MAAtBJ,EAAA,CAAA4D,UAAA,YAAAR,GAAA,CAAAvC,QAAA,CAAsB;MAKNb,EAAA,CAAAI,SAAA,GAAsB;MAAtBJ,EAAA,CAAA4D,UAAA,YAAAR,GAAA,CAAAtC,QAAA,CAAsB;MAKtDd,EAAA,CAAAI,SAAA,GAAkB;MAAlBJ,EAAA,CAAA4D,UAAA,SAAAR,GAAA,CAAA7C,YAAA,CAAkB;;;;;;SDLbC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}