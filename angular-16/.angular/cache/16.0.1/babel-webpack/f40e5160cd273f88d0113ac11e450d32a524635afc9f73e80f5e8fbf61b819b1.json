{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeatherComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Weather\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Temperature: \", ctx_r0.weatherData.temperature, \" \\u00B0C\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Humidity: \", ctx_r0.weatherData.humidity, \" %\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Rainfall: \", ctx_r0.weatherData.rainfall, \" mm\");\n  }\n}\nclass WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.lat = 0;\n    this.lon = 0;\n    this.weatherData = null;\n    this.soilData = {\n      ph: 6.5,\n      nitrogen: 0.2,\n      phosphorus: 35,\n      potassium: 50\n    };\n  }\n  fetchWeather() {\n    this.weatherService.getWeather(this.lat, this.lon).subscribe({\n      next: data => this.weatherData = data,\n      error: err => console.error('Weather error:', err)\n    });\n  }\n  onSubmit() {\n    // You can use soilData + weatherData for your model call\n    console.log('Final Input:', {\n      lat: this.lat,\n      lon: this.lon,\n      ...this.weatherData,\n      ...this.soilData\n    });\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 32,\n  vars: 7,\n  consts: [[\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"], [\"type\", \"number\", \"step\", \"0.1\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"step\", \"0.01\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n      i0.ɵɵtext(2, \"Latitude: \");\n      i0.ɵɵelementStart(3, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.lat = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Longitude: \");\n      i0.ɵɵelementStart(6, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.lon = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_7_listener() {\n        return ctx.fetchWeather();\n      });\n      i0.ɵɵtext(8, \"Get Weather\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(9, WeatherComponent_div_9_Template, 9, 3, \"div\", 2);\n      i0.ɵɵelement(10, \"hr\");\n      i0.ɵɵelementStart(11, \"h3\");\n      i0.ɵɵtext(12, \"Enter Soil Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\");\n      i0.ɵɵtext(15, \"pH: \");\n      i0.ɵɵelementStart(16, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.soilData.ph = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"label\");\n      i0.ɵɵtext(19, \"Nitrogen (%): \");\n      i0.ɵɵelementStart(20, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.soilData.nitrogen = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"label\");\n      i0.ɵɵtext(23, \"Phosphorus (mg/kg): \");\n      i0.ɵɵelementStart(24, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.soilData.phosphorus = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(25, \"br\");\n      i0.ɵɵelementStart(26, \"label\");\n      i0.ɵɵtext(27, \"Potassium (mg/kg): \");\n      i0.ɵɵelementStart(28, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.soilData.potassium = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(29, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_30_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(31, \"Submit\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.lat);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.lon);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.soilData.ph);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.soilData.nitrogen);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.soilData.phosphorus);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.soilData.potassium);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n  encapsulation: 2\n});\nexport { WeatherComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","weatherData","temperature","humidity","rainfall","WeatherComponent","constructor","weatherService","lat","lon","soilData","ph","nitrogen","phosphorus","potassium","fetchWeather","getWeather","subscribe","next","data","error","err","console","onSubmit","log","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵlistener","WeatherComponent_Template_input_ngModelChange_3_listener","$event","WeatherComponent_Template_input_ngModelChange_6_listener","WeatherComponent_Template_button_click_7_listener","ɵɵtemplate","WeatherComponent_div_9_Template","ɵɵelement","WeatherComponent_Template_input_ngModelChange_16_listener","WeatherComponent_Template_input_ngModelChange_20_listener","WeatherComponent_Template_input_ngModelChange_24_listener","WeatherComponent_Template_input_ngModelChange_28_listener","WeatherComponent_Template_button_click_30_listener","ɵɵproperty"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\feature\\weather.component.ts","C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\feature\\weather.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from '../../Services/weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html'\n})\nexport class WeatherComponent {\n  lat: number = 0;\n  lon: number = 0;\n\n  weatherData: any = null;\n\n  soilData = {\n    ph: 6.5,\n    nitrogen: 0.2,\n    phosphorus: 35,\n    potassium: 50\n  };\n\n  constructor(private weatherService: WeatherService) {}\n\n  fetchWeather() {\n    this.weatherService.getWeather(this.lat, this.lon).subscribe({\n      next: (data) => this.weatherData = data,\n      error: (err) => console.error('Weather error:', err)\n    });\n  }\n\n  onSubmit() {\n    // You can use soilData + weatherData for your model call\n    console.log('Final Input:', {\n      lat: this.lat,\n      lon: this.lon,\n      ...this.weatherData,\n      ...this.soilData\n    });\n  }\n}\n","<div>\n  <label>Latitude: <input [(ngModel)]=\"lat\" type=\"number\" /></label>\n  <label>Longitude: <input [(ngModel)]=\"lon\" type=\"number\" /></label>\n  <button (click)=\"fetchWeather()\">Get Weather</button>\n</div>\n\n<div *ngIf=\"weatherData\">\n  <h3>Weather</h3>\n  <p>Temperature: {{ weatherData.temperature }} °C</p>\n  <p>Humidity: {{ weatherData.humidity }} %</p>\n  <p>Rainfall: {{ weatherData.rainfall }} mm</p>\n</div>\n\n<hr />\n\n<h3>Enter Soil Data</h3>\n<div>\n  <label>pH: <input [(ngModel)]=\"soilData.ph\" type=\"number\" step=\"0.1\" /></label><br>\n  <label>Nitrogen (%): <input [(ngModel)]=\"soilData.nitrogen\" type=\"number\" step=\"0.01\" /></label><br>\n  <label>Phosphorus (mg/kg): <input [(ngModel)]=\"soilData.phosphorus\" type=\"number\" /></label><br>\n  <label>Potassium (mg/kg): <input [(ngModel)]=\"soilData.potassium\" type=\"number\" /></label><br>\n</div>\n\n<button (click)=\"onSubmit()\">Submit</button>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}