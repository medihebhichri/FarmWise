{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/classification.service\";\nimport * as i2 from \"@angular/common\";\nfunction ClassifierComponent_div_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r2.tileUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ClassifierComponent_div_5_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"strong\");\n    i0.ɵɵtext(2, \"Prediction:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.prediction, \"\\n\");\n  }\n}\nfunction ClassifierComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"h3\", 7);\n    i0.ɵɵtext(2, \"Prediction:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ClassifierComponent_div_5_div_5_Template, 2, 1, \"div\", 8);\n    i0.ɵɵtemplate(6, ClassifierComponent_div_5_div_6_Template, 4, 1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.prediction);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.tileUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.prediction);\n  }\n}\nfunction ClassifierComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"h3\", 14);\n    i0.ɵɵtext(2, \"Error:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nclass ClassifierComponent {\n  constructor(classifier) {\n    this.classifier = classifier;\n    this.prediction = null;\n    this.loading = false;\n    this.error = null;\n  }\n  ngOnInit() {\n    const map = L.map('map', {\n      maxBounds: L.latLngBounds(L.latLng(-90, -180),\n      // Southwest corner\n      L.latLng(90, 180) // Northeast corner\n      ),\n\n      maxBoundsViscosity: 1.0\n    }).setView([36.8065, 10.1815], 13); // Default view\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(map);\n    map.on('click', e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      this.lat = lat;\n      this.lon = lng;\n      console.log(`Selected location: Latitude ${lat}, Longitude ${lng}`);\n    });\n  }\n  ngAfterViewInit() {\n    // Prevent map from intercepting button clicks\n    const button = document.querySelector('.classifier-form button');\n    if (button) {\n      L.DomEvent.disableClickPropagation(button);\n    }\n  }\n  onSubmit() {\n    this.reset();\n    this.loading = true;\n    this.svc.predict(this.lat, this.lon).subscribe({\n      next: res => {\n        this.prediction = res.prediction;\n        this.tileUrl = `data:image/png;base64,${res.tile}`;\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'Failed to load tile or prediction';\n        this.loading = false;\n      }\n    });\n  }\n}\nClassifierComponent.ɵfac = function ClassifierComponent_Factory(t) {\n  return new (t || ClassifierComponent)(i0.ɵɵdirectiveInject(i1.ClassificationService));\n};\nClassifierComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClassifierComponent,\n  selectors: [[\"app-classifier\"]],\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"classifier-map\", 2, \"position\", \"relative\", \"margin\", \"0 auto\", \"max-width\", \"600px\"], [\"id\", \"map\", 2, \"height\", \"300px\", \"width\", \"100%\", \"border\", \"2px solid #ccc\", \"border-radius\", \"8px\", \"z-index\", \"0\"], [1, \"classifier-form\", \"mt-4\", \"text-center\", 2, \"z-index\", \"1\", \"position\", \"relative\", \"max-width\", \"600px\", \"margin\", \"0 auto\"], [1, \"btn\", \"btn-success\", \"btn-lg\", 3, \"disabled\", \"click\"], [\"class\", \"result mt-4 p-3\", \"style\", \"background-color: #e9f7ef; border: 1px solid #28a745; border-radius: 8px; max-width: 600px; margin: 0 auto;\", 4, \"ngIf\"], [\"class\", \"error mt-4 p-3\", \"style\", \"background-color: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px; max-width: 600px; margin: 0 auto;\", 4, \"ngIf\"], [1, \"result\", \"mt-4\", \"p-3\", 2, \"background-color\", \"#e9f7ef\", \"border\", \"1px solid #28a745\", \"border-radius\", \"8px\", \"max-width\", \"600px\", \"margin\", \"0 auto\"], [1, \"text-success\"], [\"class\", \"tile-container\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"tile-container\"], [\"alt\", \"Sentinel tile\", 2, \"max-width\", \"100%\", \"border\", \"1px solid #ccc\", 3, \"src\"], [1, \"alert\", \"alert-success\"], [1, \"error\", \"mt-4\", \"p-3\", 2, \"background-color\", \"#f8d7da\", \"border\", \"1px solid #f5c6cb\", \"border-radius\", \"8px\", \"max-width\", \"600px\", \"margin\", \"0 auto\"], [1, \"text-danger\"]],\n  template: function ClassifierComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ClassifierComponent_Template_button_click_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, ClassifierComponent_div_5_Template, 7, 3, \"div\", 4);\n      i0.ɵɵtemplate(6, ClassifierComponent_div_6_Template, 5, 1, \"div\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.loading || ctx.lat == null || ctx.lon == null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Classifying\\u2026\" : \"Classify Land\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.prediction);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ClassifierComponent };","map":{"version":3,"names":["L","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r2","tileUrl","ɵɵsanitizeUrl","ɵɵtext","ɵɵtextInterpolate1","ctx_r3","prediction","ɵɵtemplate","ClassifierComponent_div_5_div_5_Template","ClassifierComponent_div_5_div_6_Template","ɵɵtextInterpolate","ctx_r0","ctx_r1","error","ClassifierComponent","constructor","classifier","loading","ngOnInit","map","maxBounds","latLngBounds","latLng","maxBoundsViscosity","setView","tileLayer","attribution","addTo","on","e","lat","lng","latlng","lon","console","log","ngAfterViewInit","button","document","querySelector","DomEvent","disableClickPropagation","onSubmit","reset","svc","predict","subscribe","next","res","tile","ɵɵdirectiveInject","i1","ClassificationService","selectors","decls","vars","consts","template","ClassifierComponent_Template","rf","ctx","ɵɵlistener","ClassifierComponent_Template_button_click_3_listener","ClassifierComponent_div_5_Template","ClassifierComponent_div_6_Template"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\classifier\\classifier.component.ts","C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\classifier\\classifier.component.html"],"sourcesContent":["// src/app/components/classifier/classifier.component.ts\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { ClassificationService, PredictionResponse } from 'src/app/Services/classification.service';\nimport { NgIf } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-classifier',\n  templateUrl: './classifier.component.html',\n  styleUrls: ['./classifier.component.scss']\n})\nexport class ClassifierComponent implements OnInit, AfterViewInit {\n  lat!: number;\n  lon!: number;\n  prediction: string | null = null;\n  loading = false;\n  error: string | null = null;\n\n  constructor(private classifier: ClassificationService) {}\n\n  ngOnInit(): void {\n    const map = L.map('map', {\n      maxBounds: L.latLngBounds(\n        L.latLng(-90, -180), // Southwest corner\n        L.latLng(90, 180)   // Northeast corner\n      ),\n      maxBoundsViscosity: 1.0\n    }).setView([36.8065, 10.1815], 13); // Default view\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(map);\n\n    map.on('click', (e: any) => {\n      const { lat, lng } = e.latlng;\n      this.lat = lat;\n      this.lon = lng;\n      console.log(`Selected location: Latitude ${lat}, Longitude ${lng}`);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    // Prevent map from intercepting button clicks\n    const button = document.querySelector('.classifier-form button') as HTMLElement;\n    if (button) {\n      L.DomEvent.disableClickPropagation(button);\n    }\n  }\n\n onSubmit() {\n  this.reset();\n  this.loading = true;\n\n  this.svc.predict(this.lat, this.lon).subscribe({\n    next: res => {\n      this.prediction = res.prediction;\n      this.tileUrl = `data:image/png;base64,${res.tile}`;\n      this.loading = false;\n    },\n    error: () => {\n      this.error = 'Failed to load tile or prediction';\n      this.loading = false;\n    }\n  });\n}\n\n}\n","<!-- src/app/components/classifier/classifier.component.html -->\n<div class=\"classifier-map\" style=\"position: relative; margin: 0 auto; max-width: 600px;\">\n  <div id=\"map\" style=\"height: 300px; width: 100%; border: 2px solid #ccc; border-radius: 8px; z-index: 0;\"></div> <!-- Adjusted map dimensions and centered -->\n</div>\n\n<div class=\"classifier-form mt-4 text-center\" style=\"z-index: 1; position: relative; max-width: 600px; margin: 0 auto;\"> <!-- Centered button and form -->\n  <button class=\"btn btn-success btn-lg\" (click)=\"onSubmit()\" [disabled]=\"loading || lat == null || lon == null\">\n    {{ loading ? 'Classifying…' : 'Classify Land' }}\n  </button>\n</div>\n\n<div *ngIf=\"prediction\" class=\"result mt-4 p-3\" style=\"background-color: #e9f7ef; border: 1px solid #28a745; border-radius: 8px; max-width: 600px; margin: 0 auto;\">\n  <h3 class=\"text-success\">Prediction:</h3>\n  <p>{{ prediction }}</p>\n  <div *ngIf=\"tileUrl\" class=\"tile-container\">\n  <img [src]=\"tileUrl\" alt=\"Sentinel tile\" style=\"max-width:100%; border:1px solid #ccc;\"/>\n</div>\n\n<div *ngIf=\"prediction\" class=\"alert alert-success\">\n  <strong>Prediction:</strong> {{ prediction }}\n</div>\n\n</div>\n\n<div *ngIf=\"error\" class=\"error mt-4 p-3\" style=\"background-color: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px; max-width: 600px; margin: 0 auto;\">\n  <h3 class=\"text-danger\">Error:</h3>\n  <p>{{ error }}</p>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}