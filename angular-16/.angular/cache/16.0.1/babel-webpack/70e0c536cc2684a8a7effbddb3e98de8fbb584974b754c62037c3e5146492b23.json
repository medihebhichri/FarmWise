{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet WeatherComponent = class WeatherComponent {\n  constructor(weatherService, soilService) {\n    this.weatherService = weatherService;\n    this.soilService = soilService;\n    this.lat = 0;\n    this.lon = 0;\n    this.weatherData = null;\n    this.soilData = null;\n  }\n  fetchData() {\n    this.weatherService.getWeather(this.lat, this.lon).subscribe({\n      next: data => this.weatherData = data,\n      error: err => console.error('Weather error:', err)\n    });\n    this.soilService.getSoil(this.lat, this.lon).subscribe({\n      next: data => this.soilData = data,\n      error: err => console.error('Soil error:', err)\n    });\n  }\n};\nWeatherComponent = __decorate([Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html'\n})], WeatherComponent);\nexport { WeatherComponent };","map":{"version":3,"names":["Component","WeatherComponent","constructor","weatherService","soilService","lat","lon","weatherData","soilData","fetchData","getWeather","subscribe","next","data","error","err","console","getSoil","__decorate","selector","templateUrl"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\pages\\feature\\weather.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from '../../Services';\nimport { SoilService } from '../../Services/soil.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html'\n})\nexport class WeatherComponent {\n  lat: number = 0;\n  lon: number = 0;\n\n  weatherData: any = null;\n  soilData: any = null;\n\n  constructor(\n    private weatherService: WeatherService,\n    private soilService: SoilService\n  ) {}\n\n  fetchData() {\n    this.weatherService.getWeather(this.lat, this.lon).subscribe({\n      next: (data) => this.weatherData = data,\n      error: (err) => console.error('Weather error:', err)\n    });\n\n    this.soilService.getSoil(this.lat, this.lon).subscribe({\n      next: (data) => this.soilData = data,\n      error: (err) => console.error('Soil error:', err)\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQzC,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB;EAO3BC,YACUC,cAA8B,EAC9BC,WAAwB;IADxB,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,WAAW,GAAXA,WAAW;IARrB,KAAAC,GAAG,GAAW,CAAC;IACf,KAAAC,GAAG,GAAW,CAAC;IAEf,KAAAC,WAAW,GAAQ,IAAI;IACvB,KAAAC,QAAQ,GAAQ,IAAI;EAKjB;EAEHC,SAASA,CAAA;IACP,IAAI,CAACN,cAAc,CAACO,UAAU,CAAC,IAAI,CAACL,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC,CAACK,SAAS,CAAC;MAC3DC,IAAI,EAAGC,IAAI,IAAK,IAAI,CAACN,WAAW,GAAGM,IAAI;MACvCC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,gBAAgB,EAAEC,GAAG;KACpD,CAAC;IAEF,IAAI,CAACX,WAAW,CAACa,OAAO,CAAC,IAAI,CAACZ,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC,CAACK,SAAS,CAAC;MACrDC,IAAI,EAAGC,IAAI,IAAK,IAAI,CAACL,QAAQ,GAAGK,IAAI;MACpCC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,aAAa,EAAEC,GAAG;KACjD,CAAC;EACJ;CACD;AAvBYd,gBAAgB,GAAAiB,UAAA,EAJ5BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE;CACd,CAAC,C,EACWnB,gBAAgB,CAuB5B;SAvBYA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}