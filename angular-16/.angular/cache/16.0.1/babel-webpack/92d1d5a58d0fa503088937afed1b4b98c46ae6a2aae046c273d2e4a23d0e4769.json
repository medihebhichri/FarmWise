{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, HostListener } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { NgbCollapseModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NavigationComponent } from \"src/app/shared/header/navigation.component\";\nimport { SidebarComponent } from \"src/app/shared/sidebar/sidebar.component\";\n//declare var $: any;\nlet FullComponent = class FullComponent {\n  constructor(router) {\n    this.router = router;\n    this.isCollapsed = false;\n    this.innerWidth = 0;\n    this.defaultSidebar = \"\";\n    this.showMobileMenu = false;\n    this.expandLogo = false;\n    this.sidebartype = \"full\";\n  }\n  Logo() {\n    this.expandLogo = !this.expandLogo;\n  }\n  ngOnInit() {\n    if (this.router.url === \"/\") {\n      this.router.navigate([\"/dashboard\"]);\n    }\n    this.defaultSidebar = this.sidebartype;\n    this.handleSidebar();\n  }\n  onResize() {\n    this.handleSidebar();\n  }\n  handleSidebar() {\n    this.innerWidth = window.innerWidth;\n    if (this.innerWidth < 1170) {\n      this.sidebartype = \"full\";\n    } else {\n      this.sidebartype = this.defaultSidebar;\n    }\n  }\n  toggleSidebarType() {\n    switch (this.sidebartype) {\n      case \"full\":\n        this.sidebartype = \"mini-sidebar\";\n        break;\n      case \"mini-sidebar\":\n        this.sidebartype = \"full\";\n        break;\n      default:\n    }\n  }\n};\n__decorate([HostListener(\"window:resize\", [\"$event\"])], FullComponent.prototype, \"onResize\", null);\nFullComponent = __decorate([Component({\n  selector: \"app-full-layout\",\n  standalone: true,\n  imports: [RouterModule, SidebarComponent, NavigationComponent, CommonModule, NgbCollapseModule],\n  templateUrl: \"./full.component.html\",\n  styleUrls: [\"./full.component.scss\"]\n})], FullComponent);\nexport { FullComponent };","map":{"version":3,"names":["CommonModule","Component","HostListener","RouterModule","NgbCollapseModule","NavigationComponent","SidebarComponent","FullComponent","constructor","router","isCollapsed","innerWidth","defaultSidebar","showMobileMenu","expandLogo","sidebartype","Logo","ngOnInit","url","navigate","handleSidebar","onResize","window","toggleSidebarType","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\MSI\\Downloads\\admin-pro-angular-lite-master\\admin-pro-angular-lite-master\\angular-16\\src\\app\\layouts\\full\\full.component.ts"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\nimport { Component, OnInit, HostListener } from \"@angular/core\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport { NgbCollapseModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NavigationComponent } from \"src/app/shared/header/navigation.component\";\nimport { SidebarComponent } from \"src/app/shared/sidebar/sidebar.component\";\n\n//declare var $: any;\n\n@Component({\n  selector: \"app-full-layout\",\n  standalone: true,\n  imports:[RouterModule, SidebarComponent, NavigationComponent, CommonModule, NgbCollapseModule],\n  templateUrl: \"./full.component.html\",\n  styleUrls: [\"./full.component.scss\"],\n})\nexport class FullComponent implements OnInit {\n\n  constructor(public router: Router) {}\n  public isCollapsed = false;\n  public innerWidth: number = 0;\n  public defaultSidebar: string = \"\";\n  public showMobileMenu = false;\n  public expandLogo = false;\n  public sidebartype = \"full\";\n\n  Logo() {\n    this.expandLogo = !this.expandLogo;\n  }\n\n  ngOnInit() {\n    if (this.router.url === \"/\") {\n      this.router.navigate([\"/dashboard\"]);\n    }\n    this.defaultSidebar = this.sidebartype;\n    this.handleSidebar();\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"])\n  onResize() {\n    this.handleSidebar();\n  }\n\n  handleSidebar() {\n    this.innerWidth = window.innerWidth;\n    if (this.innerWidth < 1170) {\n      this.sidebartype = \"full\";\n    } else {\n      this.sidebartype = this.defaultSidebar;\n    }\n  }\n\n  toggleSidebarType() {\n    switch (this.sidebartype) {\n      case \"full\":\n        this.sidebartype = \"mini-sidebar\";\n        break;\n\n      case \"mini-sidebar\":\n        this.sidebartype = \"full\";\n        break;\n\n      default:\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,EAAUC,YAAY,QAAQ,eAAe;AAC/D,SAAiBC,YAAY,QAAQ,iBAAiB;AACtD,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,mBAAmB,QAAQ,4CAA4C;AAChF,SAASC,gBAAgB,QAAQ,0CAA0C;AAE3E;AASA,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAExBC,YAAmBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAClB,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,cAAc,GAAG,KAAK;IACtB,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,WAAW,GAAG,MAAM;EANS;EAQpCC,IAAIA,CAAA;IACF,IAAI,CAACF,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;EAEAG,QAAQA,CAAA;IACN,IAAI,IAAI,CAACR,MAAM,CAACS,GAAG,KAAK,GAAG,EAAE;MAC3B,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;IAEtC,IAAI,CAACP,cAAc,GAAG,IAAI,CAACG,WAAW;IACtC,IAAI,CAACK,aAAa,EAAE;EACtB;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACD,aAAa,EAAE;EACtB;EAEAA,aAAaA,CAAA;IACX,IAAI,CAACT,UAAU,GAAGW,MAAM,CAACX,UAAU;IACnC,IAAI,IAAI,CAACA,UAAU,GAAG,IAAI,EAAE;MAC1B,IAAI,CAACI,WAAW,GAAG,MAAM;KAC1B,MAAM;MACL,IAAI,CAACA,WAAW,GAAG,IAAI,CAACH,cAAc;;EAE1C;EAEAW,iBAAiBA,CAAA;IACf,QAAQ,IAAI,CAACR,WAAW;MACtB,KAAK,MAAM;QACT,IAAI,CAACA,WAAW,GAAG,cAAc;QACjC;MAEF,KAAK,cAAc;QACjB,IAAI,CAACA,WAAW,GAAG,MAAM;QACzB;MAEF;IAAQ;EAEZ;CACD;AA1BCS,UAAA,EADCtB,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC,C,4CAGzC;AAzBUK,aAAa,GAAAiB,UAAA,EAPzBvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,iBAAiB;EAC3BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAC,CAACxB,YAAY,EAAEG,gBAAgB,EAAED,mBAAmB,EAAEL,YAAY,EAAEI,iBAAiB,CAAC;EAC9FwB,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWtB,aAAa,CAiDzB;SAjDYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}